
@apos-translucent-opacity: 0.8;
.apos-hide { opacity: 0; }
.apos-show { opacity: 1; }

// .apos-peek { pointer-events: none; }

.apos-area, .apos-area-widgets, .apos-area-widget { position: relative; }

.apos-area
{
  // When an area's limit is reached, it shouldn't display controls
  // to add more content. We use direct children selectors to in order
  // to support nested areas.
  &.apos-limit-reached
  {
    >.apos-ui .apos-area-controls,
    >[data-apos-widgets]>[data-apos-widget-wrapper]>.apos-ui .apos-area-controls { display: none !important; }
  }
  // When we are dragging a widget, we want it to be at the forefront.
  .apos-area-widget.ui-draggable-dragging { z-index: @apos-z-index-9; }
  &.apos-empty
  {
    // When there aren't any widgets in an area, it should have a height
    // and a background color set by default.
    height: 80px;
    background-color: @apos-light;
    // When there aren't any widgets in an area, the add content controls
    // should appear absolutely positioned in the empty state.

    > .apos-ui .apos-area-controls
    {
      position: absolute;
      opacity: @apos-translucent-opacity;
      display: block;
      top: 50%;
      transform: translateY(-50%);
      .apos-area-divider { display: none; }
    }
    >.apos-ui .apos-area-controls--singleton
    {
      transform: none;
      top: auto;
      bottom: @apos-padding-2;
      left: @apos-padding-2;
      &:hover { opacity: 1; }
    }

  }
}

[data-apos-area-controls-original] .apos-area-controls
{
  top: 0;
  transform: translateY(-50%);
}

.apos-area-widget-wrapper>.apos-ui>.apos-area-controls
{
  bottom: 0;
  transform: translateY(50%);
  .apos-transition;
}

// have to get above apos-ui reset scoping
.apos-ui
{
  // Widget controls positioning
  // .apos-area .apos-ui { position: absolute; }
  .apos-area-widget-controls
  {
    position: absolute;
    opacity: 0;
    z-index: @apos-z-index-4;
    .apos-transition;
    &:hover { z-index: @apos-z-index-9; }
  }
  .apos-area-widget-controls--context
  {
    top: @apos-padding-2;
    left: @apos-padding-2;
  }
  .apos-area-widget-controls--data
  {
    bottom: @apos-padding-2;
    left: @apos-padding-2;
  }

  // The horizontal line under the add content button which divides areas
  .apos-area-controls .apos-area-divider
  {
    width: 100%;
    transform: translateY(-13px);
    background-color: @apos-base;
    // z-index: 0;
  }

  .apos-area-controls
  {
    position: absolute;
    background-color: @apos-primary;
    width: 100%;
    text-align: center;
    // opacity: 0;
    // top: 3px;
    margin-top: -1px;
    height: 2px;
    // z-index: @apos-z-index-1;
    .apos-drop-shadow;
    .apos-glow;
    &:before,
    &:after
    {
      position: relative;
      content: "";
      height: 4px;
      display: block;
      width: 100%;
    }
    &:before { top: -4px; }
    &:after { top: -2px; }

    &.apos-area-controls--singleton
    {
      display: block;
      opacity: 1;
      text-align: left;
    }
  }

  .apos-dropdown.apos-dropdown--area-controls
  {
    &.apos-active
    {
      >.apos-button>i { transform: translateX(-50%) rotate(45deg); margin-left: -0.2px; }
    }
  }
}

// hide show the things
.apos-area
{
  // z-index: auto;
  // area controls (Add Content) 
  .apos-ui
  {
    // position: absolute;
    // width: 100%;
    // .apos-transition;
    // opacity: 0;
    // z-index: @apos-z-index-1;
  }

  .apos-ui.apos-active
  {
    opacity: 1;
  }

  .apos-area-widget:hover
  {
    & > .apos-ui .apos-area-widget-controls
    {
      opacity: @apos-translucent-opacity;
    }
  }

  // &:hover > .apos-ui > .apos-area-widget-controls,
  // .apos-area-widget-wrapper:hover > .apos-ui > .apos-area-widget-controls,
  // >[data-apos-area-controls-original]>.apos-area-controls,
  // >.apos-area-widgets>.apos-area-widget-wrapper:hover>.apos-ui>.apos-area-controls
  // {
  //   z-index: 10;
  //   opacity: @apos-translucent-opacity;
  //   &:hover { opacity: 1; }
  // }



  [data-apos-area-controls]:hover { opacity: 1; }
  .apos-area-controls.active
  {
    opacity: 1;
    display: block;
    z-index: @apos-z-index-9; 
  }

  ///////////////////
  // controls
  .apos-ui.apos-peek { opacity: @apos-translucent-opacity; }

}

.apos-ui .apos-dropdown.apos-dropdown--area-controls
{
  .apos-transition;
  display: inherit;
  .apos-drop-shadow(0, 0, 0, 0);
  >.apos-button
  {
    position: absolute;
    height: 18px;
    width: 18px;
    margin: auto;
    left: 0;
    right: 0;
    top: -13px;
    border: 2px solid @apos-white;
    .apos-drop-shadow();
  }
  >.apos-dropdown-items
  {
    text-align: left;
    left: 0;
    right: 0;
    top: 4px;
    margin-left: auto;
    margin-right: auto;
    max-width: 200px;
    .apos-rounded;
  }
}


// hide ui that you edit right on the page
.apos-area-widget--contextual >.apos-ui .apos-area-widget-controls--data { display: none; }

// special consideration for 'block-like' areas
[data-apos-area-role="layout"]
{
  & > .apos-ui .apos-area-controls,
  & > .apos-area-widgets > .apos-area-widget-wrapper > .apos-ui .apos-area-controls
  {
    background-color: @apos-secondary;
    .apos-glow(@apos-secondary);
    .apos-button--circular { background-color: @apos-secondary; }
  }
  & > .apos-ui,
  & > .apos-area-widgets > .apos-area-widget-wrapper > .apos-ui
  {
    position: relative;
    display: block;
    height: 20px;
    .apos-area-controls { bottom: 10px; }
  }
}