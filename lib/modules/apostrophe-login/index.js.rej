***************
*** 27,41 ****
  // are tolerated. If you wish to enforce them for existing passwords
  // as well, see below.
  //
  // `passwordRulesAtLoginTime`
  //
  // By default, password rules are enforced only when a password is
- // being set or reset. If you wish, you can set `passwordRulesAtLoginTime: true`
- // to apply them at login time so that even an existing password will
  // not work unless it passes the rules. This can be useful if you don't
- // mind a few irritated users and you have enabled `resetKnownPassword: true`,
- // or the email-based `passwordReset: true` (the altter requires email delivery
- // to work, see below).
  //
  // `passwordReset`
  //
--- 27,53 ----
  // are tolerated. If you wish to enforce them for existing passwords
  // as well, see below.
  //
+ // `resetLegacyPassword`
+ //
+ // By default, password rules are enforced only when a password is
+ // being set or reset. If you wish, you can set `resetLegacyPassword: true`
+ // to require users to reset their password on the spot if it is
+ // correct but does not meet the current rules. However if you are able
+ // to enable the email-based `passwordReset: true` option that
+ // is slightly more secure because it requires proof of ownership of the
+ // email address as well as the old password. You can combine that with
+ // `passwordRulesAtLoginTime`, below.
+ //
  // `passwordRulesAtLoginTime`
  //
  // By default, password rules are enforced only when a password is
+ // being set or reset. Setting this option to `true` will apply
+ // the rules at login time, so that even an existing password will
  // not work unless it passes the rules. This can be useful if you don't
+ // mind a few irritated users and you have enabled
+ // the email-based `passwordReset: true`. However this requires
+ // email delivery to work (see below), so you may be more comfortable
+ // with `resetLegacyPassword: true` (above).
  //
  // `passwordReset`
  //
